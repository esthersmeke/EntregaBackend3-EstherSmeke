# src/docs/products.doc.yaml
openapi: "3.0.1"
info:
  title: "Backend3 API - Products"
  description: "API Documentation for Product Endpoints"
  version: "1.0.0"

servers:
  - url: "http://localhost:3000/api"

components:
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
          description: Product's name.
        price:
          type: number
          description: Product's price.
      example:
        name: "Example Product"
        price: 99.99

  responses:
    res200:
      type: object
      properties:
        message:
          type: string
          description: Informational message.
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
      example:
        message: "Products retrieved successfully."
        products:
          - name: "Example Product A"
            price: 99.99
          - name: "Example Product B"
            price: 49.99

    res201:
      type: object
      properties:
        message:
          type: string
          description: Success message.
      example:
        message: "Products created successfully."

    res400:
      type: object
      properties:
        message:
          type: string
          description: Client error message.
        statusCode:
          type: number
          description: HTTP status code.
      example:
        message: "The 'quantity' parameter must be a valid number."
        statusCode: 400

    res404:
      type: object
      properties:
        message:
          type: string
          description: Resource not found message.
        statusCode:
          type: number
          description: HTTP status code.
      example:
        message: "No products found."
        statusCode: 404

    res500:
      type: object
      properties:
        message:
          type: string
          description: Server error message.
        statusCode:
          type: number
          description: HTTP status code.
      example:
        message: "Internal server error."
        statusCode: 500

paths:
  /products/mocks/{quantity}:
    get:
      summary: Generate mock products.
      description: Generate and save `quantity` mock products in the database.
      tags:
        - Products
      parameters:
        - name: quantity
          in: path
          required: true
          schema:
            type: integer
          description: Number of products to generate.
      responses:
        "201":
          description: Products successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res201"
        "400":
          description: Invalid parameter.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res400"
        "500":
          description: Server error creating products.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res500"

  /products:
    get:
      summary: Retrieve all products.
      description: Return all products stored in the database.
      tags:
        - Products
      responses:
        "200":
          description: Products retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res200"
        "404":
          description: No products found.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res404"
        "500":
          description: Server error retrieving products.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res500"
    post:
      summary: Create a new product.
      description: Add a product to the database.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Product created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res201"
        "400":
          description: Missing required data.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res400"
        "500":
          description: Server error creating product.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res500"

  /products/{pid}:
    get:
      summary: Retrieve a product by ID.
      description: Return a specific product by its unique ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the product.
      responses:
        "200":
          description: Product retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res200"
        "404":
          description: Product not found.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res404"
        "500":
          description: Server error retrieving product.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res500"

    put:
      summary: Update a product by ID.
      description: Update a product's data using its unique ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the product.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Product updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res200"
        "404":
          description: Product not found.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res404"
        "500":
          description: Server error updating product.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res500"

    delete:
      summary: Delete a product by ID.
      description: Remove a product from the database using its unique ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the product.
      responses:
        "200":
          description: Product deleted successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res200"
        "404":
          description: Product not found.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res404"
        "500":
          description: Server error deleting product.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/res500"
