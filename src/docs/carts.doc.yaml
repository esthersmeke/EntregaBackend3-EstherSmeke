# src/docs/carts.doc.yaml
openapi: "3.0.1"
info:
  title: "Backend3 API - Carts"
  description: "API Documentation for Cart Endpoints"
  version: "1.0.0"

servers:
  - url: "http://localhost:3000/api"

components:
  schemas:
    CartItem:
      type: object
      properties:
        productId:
          type: string
          description: The unique identifier of the product.
        quantity:
          type: number
          description: Quantity of the product in the cart.
      required:
        - productId
        - quantity
      example:
        productId: "6453e83f1c66f2c8d084e1e2"
        quantity: 2

    Cart:
      type: object
      properties:
        userId:
          type: string
          description: The unique identifier of the user.
        products:
          type: array
          items:
            $ref: "#/components/schemas/CartItem"
      required:
        - userId
        - products
      example:
        userId: "6453e83f1c66f2c8d084e1e1"
        products:
          - productId: "6453e83f1c66f2c8d084e1e2"
            quantity: 2

  responses:
    CartNotFound:
      type: object
      properties:
        message:
          type: string
          description: Cart not found.
        statusCode:
          type: number
          description: HTTP status code.
      example:
        message: "Cart not found."
        statusCode: 404

    CartSuccessResponse:
      type: object
      properties:
        response:
          $ref: "#/components/schemas/Cart"
        message:
          type: string
      example:
        response:
          userId: "6453e83f1c66f2c8d084e1e1"
          products:
            - productId: "6453e83f1c66f2c8d084e1e2"
              quantity: 2
        message: "CART CREATED"

paths:
  /carts:
    get:
      summary: Retrieve all carts.
      tags:
        - Carts
      responses:
        "200":
          description: Carts retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Cart"
                  message:
                    type: string
                example:
                  response:
                    - userId: "6453e83f1c66f2c8d084e1e1"
                      products:
                        - productId: "6453e83f1c66f2c8d084e1e2"
                          quantity: 2
                  message: "CARTS READ"
        "404":
          description: No carts found.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CartNotFound"
    post:
      summary: Create a new cart.
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
      responses:
        "201":
          description: Cart created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CartSuccessResponse"
        "400":
          description: Missing required data.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CartNotFound" # Puedes definir un error 400 similar a products/users
  /carts/{cid}:
    get:
      summary: Retrieve a cart by ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the cart.
      responses:
        "200":
          description: Cart retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CartSuccessResponse"
        "404":
          description: Cart not found.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CartNotFound"
    put:
      summary: Update a cart by ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the cart.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
      responses:
        "200":
          description: Cart updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CartSuccessResponse"
        "404":
          description: Cart not found.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CartNotFound"
    delete:
      summary: Delete a cart by ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the cart.
      responses:
        "200":
          description: Cart deleted successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CartSuccessResponse"
        "404":
          description: Cart not found.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/CartNotFound"
